<?xml version="1.0" encoding="utf-8"?>
<flow name="BurgerFlow" package="iristk.app.burger" 
    initial="Start" xmlns="iristk.flow" xmlns:p="iristk.flow.param" xmlns:dialog="iristk.flow.DialogFlow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="iristk.flow flow.xsd iristk.flow.DialogFlow DialogFlow.xsd">

    <var name="order" type="Record" value="new Record()"/>

    <state id="Start" extends="Dialog">
        <onentry>
            <if cond="count == 1">
                <dialog:say>Welcome</dialog:say>
            </if>
            <dialog:say>May I please take your order</dialog:say>
            <dialog:listen/>
        </onentry>
    </state>    


    <state id="Dialog">
        <onevent name="sense.user.speak" cond="event?:sem:order">
            <exec>order.adjoin(asRecord(event:sem:order))</exec>
            <goto state="CheckOrder"/>  
        </onevent>
        <onevent name="sense.user.speak">
            <dialog:say>Sorry, I <str cond="count > 1">still</str> didn't get that</dialog:say>
            <reentry/>  
        </onevent>
        <onevent name="sense.user.silence">
            <dialog:say>Sorry, I <str cond="count > 1">still</str> didn't hear anything</dialog:say>
            <reentry/>  
        </onevent>
    </state>

    
    <state id="CheckOrder">
        <onentry>
            <if cond="!order?:main">
                <goto state="RequestMain"/>
            <elseif cond="!order?:drink"/>
                <goto state="RequestDrink"/>
            <elseif cond="eq(order:drink:type, 'milkshake') and !order?:drink:flavor"/>
                <goto state="RequestFlavor"/>
            <elseif cond="!order?:side"/>
                <goto state="RequestSide"/> 

            <else/>
                <goto state="Done"/>
            </if>
        </onentry>
    </state>

    
    <state id="RequestMain" extends="Dialog">
        <onentry>
            <dialog:say>Do you want a hamburger?</dialog:say>
            <dialog:listen/>
        </onentry>
        <onevent name="sense.user.speak" cond="event?:sem:yes">
            <exec>order:main:type = "hamburger"</exec>
            <goto state="CheckOrder"/>  
        </onevent>

        <onevent name="sense.user.speak" cond="event?:sem:no">
            <exec>order:main:type = "none"</exec>
            <goto state="CheckOrder"/>  
        </onevent>
    </state>

    
    <state id="RequestDrink" extends="Dialog">
        <onentry>
            <dialog:say>Do you want anything to drink?</dialog:say>
            <dialog:listen/>
        </onentry>
        <onevent name="sense.user.speak" cond="event?:sem:yes">
            <dialog:say>So what do you want to drink?</dialog:say>
            <dialog:listen/>
        </onevent>
        <onevent name="sense.user.speak" cond="event?:sem:no">
            <exec>order:drink:type = "none"</exec>
            <goto state="CheckOrder"/>  
        </onevent>
    </state>


    <state id="RequestFlavor" extends="Dialog">
        <onentry>
            <dialog:say>What flavor do you want in your milkshake?</dialog:say>
            <dialog:listen/>
        </onentry>
        <onevent name="sense.user.speak" cond="event?:sem:flavor">
            <exec>order:drink:flavor = event:sem:flavor</exec>
            <goto state="CheckOrder"/>  
        </onevent>
    </state>

    
    <state id="RequestSide" extends="Dialog">
        <onentry>
            <dialog:say>Do you want anything on the side, such as fries or salad?</dialog:say>
            <dialog:listen/>
        </onentry>
        <onevent name="sense.user.speak" cond="event?:sem:yes">
            <dialog:say>So what do you want on the side?</dialog:say>
            <dialog:listen/>
        </onevent>
        <onevent name="sense.user.speak" cond="event?:sem:no">
            <exec>order:side:type = "none"</exec>
            <goto state="CheckOrder"/>  
        </onevent>
    </state>

    
    <state id="Done">
        <onentry>
            <dialog:say>Okay, thanks for your order</dialog:say>
            <log><expr>order.toStringIndent()</expr></log>
            <exec>System.exit(0)</exec>
        </onentry>
    </state>


</flow>
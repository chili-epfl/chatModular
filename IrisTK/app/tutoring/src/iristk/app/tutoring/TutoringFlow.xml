<?xml version="1.0" encoding="utf-8"?>
<flow name="TutoringFlow" package="iristk.app.tutoring" 
	initial="Start"	xmlns="iristk.flow" xmlns:p="iristk.flow.param" xmlns:dialog="iristk.flow.DialogFlow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="iristk.flow flow.xsd iristk.flow.DialogFlow DialogFlow.xsd">
	
	<import class="iristk.speech.Console"/>
	<var name="number"  type="Integer"/>
	<var name="guesses" type="Integer"/>
	<var name="g" type="Grammar" value="new Grammar()"/>
	
	<state id="Start">
		<onentry>
			<exec>number = 10</exec>
			<exec>guesses = 0</exec>
			<dialog:say>Could you compute how much is 5 + 5?</dialog:say>
			<goto state="Guess"/>
		</onentry>
	</state>
	
	<state id="Guess" extends="Dialog">
		<onentry>
			<dialog:listen/>
		</onentry>
		
		<onevent name="sense.user.type" cond="g.getGrammar((String)event:text) != null">
			<exec>guesses++</exec>
			<if cond="g.getGrammar((String)event:text) == number">
				<if cond="guesses == 1">
					<dialog:say>That was correct, you find it on the first try.</dialog:say>
				<else/>
					<dialog:say>Great! You've found it this time.</dialog:say>
				</if>
				<goto state="CheckAgain"/>
			<elseif cond="g.getGrammar((String)event:text) == (number - 1) or g.getGrammar((String)event:text) == (number + 1)"/>
				<dialog:say>You're almost correct! Let's try one more time.</dialog:say>
				<reentry/>
			<elseif cond="g.getGrammar((String)event:text) &gt; number"/>	
				<random>
					<dialog:say>That was too high, think again.</dialog:say>
					<dialog:say>That's still not quite it, let's think again.</dialog:say>
				</random>
				<reentry/>
			<else/>
				<random>
					<dialog:say>That was too low, think again.</dialog:say>
					<dialog:say>I'm sure you can find it, let's try again.</dialog:say>
				</random>
				<reentry/>
			</if>
		</onevent>
		
		<onevent name="sense.user.speak" cond="event?:sem:number">
			<exec>guesses++</exec>
			<if cond="asInteger(event:sem:number) == number">
				<if cond="guesses == 1">
					<dialog:say>That was correct, you find it on the first try.</dialog:say>	
				<else/>
					<dialog:say>Great! You've found it this time.</dialog:say>
				</if>
				<goto state="CheckAgain"/>
			<elseif cond="asInteger(event:sem:number) == (number - 1) or asInteger(event:sem:number) == (number + 1)"/>
				<dialog:say>You're almost correct! Let's try one more time.</dialog:say>
				<reentry/>
			<elseif cond="asInteger(event:sem:number) &gt; number"/>	
				<random>
					<dialog:say>That was too high, think again.</dialog:say>
					<dialog:say>That's still not quite it, let's think again.</dialog:say>
				</random>
				<reentry/>
			<else/>
				<random>
					<dialog:say>That was too low, think again.</dialog:say>
					<dialog:say>I'm sure you can find it, let's try again.</dialog:say>
				</random>
				<reentry/>
			</if>
		</onevent>
	</state>
	
	<state id="CheckAgain" extends="Dialog">
		<onentry>
			<dialog:say>Do you want to try again?</dialog:say>
			<dialog:listen/>
		</onentry>
		<onevent name="sense.user.type" cond="event:text.equals(yes)">
			<dialog:say>Okay, let's try again.</dialog:say>
			<goto state="Start"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:yes">
			<dialog:say>Okay, let's try again.</dialog:say>
			<goto state="Start"/>
		</onevent>
		<onevent name="sense.user.type" cond="event:text.equals(no)">
			<dialog:say>Okay, I was glad to help you.</dialog:say>
			<exec>System.exit(0)</exec>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<dialog:say>Okay, I was glad to help you.</dialog:say>
			<exec>System.exit(0)</exec>
		</onevent>
	</state>
	
	<state id="Dialog">
		 <onevent name="sense.user.type" cond="event.getString(text).contains(help)">
		 	<random>
            	<dialog:say>You could try counting on your fingers.</dialog:say>
            	<dialog:say>Try to see this problem as if you had to sum 5 apples and 5 bananas.</dialog:say>
            	<dialog:say>Think again, I'm sure you can find it!</dialog:say>
            </random>
            <reentry/>  
        </onevent>
        
         <onevent name="sense.user.speak" cond="event?:sem:dontknow">
		 	<random>
            	<dialog:say>You could try counting on your fingers.</dialog:say>
            	<dialog:say>Try to see this problem as if you had to sum 5 apples and 5 bananas.</dialog:say>
            	<dialog:say>Think again, I'm sure you can find it!</dialog:say>
            </random>
            <reentry/>  
        </onevent>
		
		<onevent name="sense.user.type">
			<dialog:say>I am sorry, I didn't get that.</dialog:say>
			<reentry/>
		</onevent>
	</state>
	

</flow>